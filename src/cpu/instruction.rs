pub enum Instruction {
    NOOP,
    SET,
    ADD,
    SUB,
    MUL,
    MLI,
    DIV,
    DVI,
    MOD,
    MDI,
    AND,
    BOR,
    XOR,
    SHR,
    ASR,
    SHL,
    IFB,
    IFC,
    IFE,
    IFN,
    IFG,
    IFA,
    IFL,
    IFU,
    ADX,
    SBX,
    STI,
    STD,
}
impl std::convert::From<u16> for Instruction {
    fn from(val: u16) -> Self {
        match val {
            0x01 => Instruction::SET,
            0x02 => Instruction::ADD,
            0x03 => Instruction::SUB,
            0x04 => Instruction::MUL,
            0x05 => Instruction::MLI,
            0x06 => Instruction::DIV,
            0x07 => Instruction::DVI,
            0x08 => Instruction::MOD,
            0x09 => Instruction::MDI,
            0x0a => Instruction::AND,
            0x0b => Instruction::BOR,
            0x0c => Instruction::XOR,
            0x0d => Instruction::SHR,
            0x0e => Instruction::ASR,
            0x0f => Instruction::SHL,
            0x10 => Instruction::IFB,
            0x11 => Instruction::IFC,
            0x12 => Instruction::IFE,
            0x13 => Instruction::IFN,
            0x14 => Instruction::IFG,
            0x15 => Instruction::IFA,
            0x16 => Instruction::IFL,
            0x17 => Instruction::IFU,
            0x1a => Instruction::ADX,
            0x1b => Instruction::SBX,
            0x1e => Instruction::STI,
            0x1f => Instruction::STD,
            _ => Instruction::NOOP,
        }
    }
}
